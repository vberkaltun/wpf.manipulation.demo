# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]
charset = utf-8-bom

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = true

#### .NET Coding Conventions ####

# this. and Me. preferences
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = false
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true:warning
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:warning
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:warning
csharp_style_expression_bodied_methods = false:warning
csharp_style_expression_bodied_operators = false:warning
csharp_style_expression_bodied_properties = true:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = true:warning

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_switch_expression = false:suggestion
csharp_prefer_simple_using_statement = false:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = false:error

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

# Instance fields are named using camelCase and start with an underscore
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

dotnet_naming_symbols.private_static_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields.required_modifiers = static

dotnet_naming_style.underscored.capitalization = camel_case
dotnet_naming_style.underscored.required_prefix = _

dotnet_naming_rule.private_fields_underscored.symbols = private_fields
dotnet_naming_rule.private_fields_underscored.style = underscored
dotnet_naming_rule.private_fields_underscored.severity = warning

dotnet_naming_rule.private_static_fields_underscored.symbols = private_static_fields
dotnet_naming_rule.private_static_fields_underscored.style = underscored
dotnet_naming_rule.private_static_fields_underscored.severity = warning

# CA1826: Use property instead of Linq Enumerable method
dotnet_code_quality.CA1826.exclude_ordefault_methods = true

# CS1591: Missing XML comment for publicly visible type or member
# Set to 'none' here, otherwise Live Unit Tests build fails.
# This rule is also set in ca.ruleset .
dotnet_diagnostic.CS1591.severity = none

dotnet_diagnostic.IDE0010.severity = suggestion # Add missing cases to switch statement
dotnet_diagnostic.IDE0028.severity = suggestion # Use collection initializers or expressions
dotnet_diagnostic.IDE0039.severity = suggestion # Use local function instead of lambda
dotnet_diagnostic.IDE0045.severity = suggestion # Use conditional expression for assignment
dotnet_diagnostic.IDE0046.severity = suggestion # Use conditional expression for return
dotnet_diagnostic.IDE0058.severity = suggestion # Remove unnecessary expression value
dotnet_diagnostic.IDE0060.severity = warning    # Remove unused parameter
dotnet_diagnostic.IDE0072.severity = suggestion # Add missing cases to switch expression
dotnet_diagnostic.IDE0078.severity = suggestion # Use pattern matching (C# 9+)
dotnet_diagnostic.IDE0130.severity = warning    # Namespace does not match folder structure
dotnet_diagnostic.IDE0160.severity = none       # Use block-scoped namespace
dotnet_diagnostic.IDE0161.severity = suggestion # Use file-scoped namespace
dotnet_diagnostic.IDE0260.severity = suggestion # Use pattern matching
dotnet_diagnostic.IDE0290.severity = none       # Use primary constructor
dotnet_diagnostic.IDE0300.severity = suggestion # Use collection expression for array
dotnet_diagnostic.IDE0301.severity = suggestion # Use collection expression for empty
dotnet_diagnostic.IDE0305.severity = suggestion # Use collection expression for fluent

[{**/Interfaces/*.cs,**/Extensions/*.cs,**/EventArgs/*.cs,**/Exceptions/*.cs,**/Utils/*.cs}]
dotnet_diagnostic.IDE0130.severity = none # Namespace does not match folder structure

# CS0618: 'member' is obsolete
# Set to 'suggestion' to be able to use UnitsNet Quantity types in Moq's LINQ to Mocks declarations.
# UnitsNet quantities have their '==' operator marked as obsolete, which would otherwise generate
# a warning when used with LINQ to Mocks declarations.
[*Test.cs]
dotnet_diagnostic.CS0618.severity = suggestion

[*.json]
indent_style = space
indent_size = 2

#### VSSPELL Spell Checker Settings ####
[*.{cs,xaml,xml,json,txt,md}]
vsspell_ignore_words_in_all_uppercase = false
vsspell_ignore_xml_elements_in_text = false
vsspell_code_analyzer_ignore_identifier_if_private = false
vsspell_code_analyzer_ignore_identifier_if_internal = false
vsspell_code_analyzer_ignore_identifiers_within_member_bodies = false
vsspell_section_id = iwex
vsspell_additional_dictionary_folders_iwex = .\
vsspell_dictionary_languages_iwex = en-US
